#!/bin/bash

# Desura launch script
# Email any suggestions or improvements to mark@desura.com

# Initialise variables if need be
ARGS=""
GDB="false"
ARCH="$(uname -m)"
CONSOLE="false"
BIT=""
DESURAEXEC="bin/desura"

# Move into the Desura directory, moving to the backup dir first
if [ x"$1" != x"--debug" ]; then
	cd "$(dirname "$0")"
	cd "$(dirname "$(readlink -f "$0")")"
fi

if [ -d settings -a -d cache ]; then
	rm -fr settings
	rm -fr cache
fi

#remove old games dir
if [ -d common/games ]; then
	rm -fr common/games
fi

writeVersion()
{
cat << EOM > version
BRANCH=$1
BUILD=1
EOM
}

if [ -e "version" ]; then

	BUILD=$(cat version | grep BRANCH | sed 's/BRANCH=//g')

	if [ x"$BUILD" == x"120" -o x"$BUILD" == x"320" -o x"$BUILD" == x"520" ]; then
		BIT="64"
	elif [ x"$BUILD" == x"110" -o x"$BUILD" == x"310" -o x"$BUILD" == x"510" ]; then
		BIT="32"
	fi
fi

if [ -z $BIT ]; then
	BUILD=$(file ./${DESURAEXEC} | grep 64-bit)

	if [ -n "$BUILD" ]; then
		BIT="64"
	else
		BIT="32"
	fi

	if [ "$BIT" == "64" ]; then
		writeVersion 120
	else
		writeVersion 110
	fi
fi

error()
{
	# Trim newlines etc that may cause dialog issues
	MSG="$(echo "$1" | sed '/./,$!d')"

	# Print to stderr regardless
	echo "$MSG" >&2
	
	# Try using zenity (nearly all GTK systems)
	zenity --error --title="Desura" --text="$MSG"
	if [ "$?" -ne 127 ]; then
		return
	fi

	# Try using kdialog (nearly all KDE systems)
	kdialog --title "Desura" --error "$MSG"
	if [ "$?" -ne 127 ]; then
		return
	fi

	# Try using gxmessage (some lightweight GTK systems)
	gxmessage -wrap -title "Desura" -center -buttons GTK_STOCK_OK -default OK "$MSG"
	if [ "$?" -ne 127 ]; then
		return
	fi

	# Try using gxmessage (some lightweight GTK systems)
	gmessage -wrap -title "Desura" -center -buttons GTK_STOCK_OK -default OK "$MSG"
	if [ "$?" -ne 127 ]; then
		return
	fi
	
	# Try using xmessage (nearly all X systems)
	xmessage -title "Desura" -center -buttons OK -default OK -xrm '*message.scrollVertical: Never' "$MSG"
	if [ "$?" -ne 127 ]; then
		return
	fi
}

symLinkExtra()
{	
	REALLIB=$(../bin/findlib.sh $LIB $BIT)

	rm -f ../lib/$LIB > /dev/null
	
	if [ -e "$REALLIB" ]; then
		ln -s $REALLIB ../lib/$LIB
	else
		ln -s $PWD/$LIB ../lib/$LIB
	fi
}

removeDesktopShortcut()
{
	# Uninstall the old shortcut
	if [ -e $1.desktop ]; then
		xdg/xdg-desktop-menu uninstall --mode user $1.desktop
		rm $1.desktop
	fi
}

installDesktopShortcut()
{
	# Chmod it just in case
	chmod u+x $1.desktop

	# Install it
	xdg/xdg-desktop-menu install --novendor --mode user $1.desktop
}

genDesuraDS()
{
	DIR=$(echo $PWD | sed 's/ /\\ /g')

# Generate a new one
cat << EOM > desura.desktop
#!/usr/bin/env xdg-open
[Desktop Entry]
Version=1.0
Type=Application
Name=Desura
GenericName=Game Manager
Comment=Download and play the best games
Exec=$DIR/desura %U
TryExec=$PWD/$DESURAEXEC
Path=$PWD
MimeType=x-scheme-handler/desura;
Icon=$PWD/data/desura.png
Terminal=false
Categories=Game
StartupNotify=false
EOM
}

genDesuraForceDS()
{
	DIR=$(echo $PWD | sed 's/ /\\ /g')

cat << EOM > desura-force.desktop
#!/usr/bin/env xdg-open
[Desktop Entry]
Version=1.0
Type=Application
Name=Desura (Force Update)
GenericName=Game Manager
Comment=Force Desura to update itself
Exec=$DIR/desura -f
TryExec=$PWD/$DESURAEXEC
Path=$PWD
Icon=$PWD/data/desura.png
Terminal=true
Categories=Game
StartupNotify=false
EOM
}

# Check that they are using the correct version
if [ x"$BIT" == x"32" -a x"$ARCH" == x"x86_64" -a ! -e .ignore_bits ]; then
	error "You are using the i686 version of Desura when you should be using the x86_64 version. Functionality may not be as expected.\n\nIf you would like to ignore this warning, just create an empty file called .ignore_bits in your Desura directory.\n\nPlease see http://www.desura.com to download the correct version"
fi

CAIRO_LOC=$(./bin/findlib.sh libcairo.so $BIT)
if [ -e "$CAIRO_LOC" -a ! -e .ignore_cariotest ]; then
  CAIRO_TEST=$(readelf -Ws $CAIRO_LOC | awk '/cairo_(gl|qt)_surface/' | wc -l)
  
  if [ x"$CAIRO_TEST" == x"1" ]; then
	  error "Looks like you have cairo built with incompatiable flags that cause Desura to crash.\n\nIf you would like to ignore this warning, just create an empty file called .ignore_cariotest in your Desura directory.\n\nPlease see http://www.desura.com/groups/desura/forum/thread/gentoo-crash-on-login for more help"
  fi
fi

# Check for missing libs
MISSING_LIBS=$(ldd "lib/libcef_desura.so" 2> /dev/null |grep "not found$" | cut -d" " -f 1|sed 's/\t//')

# Resolve any missing (old name) libs
echo $MISSING_LIBS | grep -qs libbz2.so.1.0

if [ $? = 0 ]; then
	REALLIB_LOC=$(./bin/findlib.sh libbz2.so.1 $BIT)

	if [ -e "$REALLIB_LOC" ]; then
		ln -snf "$REALLIB_LOC" "lib/libbz2.so.1.0"
	fi
fi

cd ./lib_extra
	#copy extra's if missing
	for LIB in *.so*; do

		#handle stdlibc++ differently as it might all ready be installed
		if [ x"$LIB" == x"libstdc++.so.6" ]; then
		
			rm -f ../lib/$LIB >> /dev/null
			../bin/libstdc++test

			if [ $? -ne 0 ]; then
				ln -s $PWD/$LIB ../lib/$LIB
			else
				#still need to do this as some weird bug with ld that loads libraries from lib_extra
				symLinkExtra $LIB
			fi

		else
			symLinkExtra $LIB
		fi

	done
cd ..

# Setup lib path
export OLD_LIB_PATH=$LD_LIBRARY_PATH
export LD_LIBRARY_PATH="$PWD/lib"

# Handle invalid locales - bad hack
export OLD_LC_ALL=$LC_ALL
export LC_ALL="C"

# Loop through args, handling them if known
# otherwise appending them to $ARGS
while [ $# -gt 0 ]; do
	if [ x"$1" = x"--gdb" -o x"$1" = x"-g" ]; then
		GDB="true"
		ARGS="$ARGS $1" # (Desura needs to know if it's running w/ GDB)
	elif [ x"$1" = x"--console" ]; then
		CONSOLE="true"
	else
		ARGS="$ARGS $1"
	fi

	shift
done

LASTDIR=""

if [ -e ".last_install_dir" ]; then
	LASTDIR=$(cat .last_install_dir)
fi


if [ -e ".ignore_force_shortcut" ]; then
	removeDesktopShortcut "desura-force"
fi

if [ -e ".ignore_shortcut" ]; then
	removeDesktopShortcut "desura"
fi

FORCECREATE="false"

if [ ! -e ".ignore_force_shortcut" -a ! -e "desura-force.desktop" ]; then
	FORCECREATE="true"
fi

if [ ! -e ".ignore_shortcut" -a ! -e "desura.desktop" ]; then
	FORCECREATE="true"
fi

if [ x"$LASTDIR" != x"$PWD" -o x"$FORCECREATE" == x"true" ]; then

	removeDesktopShortcut "desura"
	removeDesktopShortcut "desura-force"

	if [ ! -e ".ignore_shortcut" ]; then
		genDesuraDS
		installDesktopShortcut "desura"
	fi

	if [ ! -e ".ignore_force_shortcut" ]; then
		genDesuraForceDS
		installDesktopShortcut "desura-force"
	fi

	echo $PWD > .last_install_dir
fi

# If --gdb was passed, run Desura with gdb, passing any other args
if [ x"$GDB" = x"true" ]; then
	echo "set follow-fork-mode child" > /tmp/desura-gdb-commands
	exec gdb -x /tmp/desura-gdb-commands --args $DESURAEXEC $ARGS
fi	

exec $DESURAEXEC $ARGS
