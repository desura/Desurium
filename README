Content
==================

 * Desura
 * Build Desura on Linux
 * Build Desura on Windows
 * Create Packages
 * Special notes for advanced users
 * Closing Remarks

Desura
===================

Desura is a gaming client that allows users to one click download and install games and game modification.
For more information, visit http://www.moddb.com/groups/desura/forum/thread/open-sourcing-desura


Build Desura on Linux
===================

Run ./build_desura.sh

In order to make use of multiple CPU cores while compiling, run
./build_desura.sh -j8
which will invoke "make -j8" so the build is sped up extremely
and takes only 7 minutes on a modern machine (intel core i7 2635QM)
"8" will be the number of compile-thread to run at a time.

You can find out the number of cores you have running:
getconf _NPROCESSORS_ONLN

Required dependencies (can be installed by package manager or install-deps.sh):
boost
c-ares (for ares support in curl)
cmake
gtk2
OpenSSL
v8
anything chromium and v8 requires

Optional dependencies (will be built by cmake if not existing):
bzip2
curl (while building without ares support)
sqlite
tinyxml

Finally run Desura using ./install/desura

If you're on a 64bit system and want 32bit support, abort building it and go to
the 'build' folder, and edit the CMake cache as to enable 32BIT_SUPPORT.
(You can use ccmake or cmake-gui for this).

Build Desura on Windows
=====================

Download and install:
 * TortoiseSvn http://tortoisesvn.net/downloads.html. Make sure to install command line tools
 * msysGit https://code.google.com/p/msysgit/downloads/list
 * TortoiseGit http://code.google.com/p/tortoisegit/downloads/list. Make sure to install at least the patch tool
 * Windows Sdk 7.1 http://www.microsoft.com/download/en/details.aspx?id=8279
  (If applicable)
 * Python 2.7 http://www.python.org/getit/
 * SCons http://www.scons.org/download.php (same architecture as python 2.7!)
 * CMake 2.8 http://www.cmake.org/

 Note: Make sure you add git to your environment path and also set SVN_PATH to point to the tortoise svn path

Open a 32bit cmd.exe with env vars set up by vc or other scripts (so we have a full build environment)
run ./build_desura.bat
wait

Building and Create Packages
=====================

If you also need to create an installable package for your distribution, then you can simply 
run the following commands to build and create packages for installing desura with your package manager:

 1. mkdir package
 2. cd package
 3. cmake -DPACKAGE_TYPE="{PACKAGE_TYPE}" -DINSTALL_DESKTOP_FILE=ON -DCMAKE_INSTALL_PREFIX="/opt/desura" ..
 4. make package

Supported Values for PACKAGE_TYPE are:
  * DEB
  * RPM

You can also mix them like: DEB;RPM

Special notes for advanced users
=====================

Desura is using the cmake build system for configuration on prject files for several build systems (make, VS, nmake, ...).
At the top of CMakeFile.txt is a documented list of options

a "normal" way to configure cmake would be something like this:
  * UNIX-based systems:
    1. mkdir build
    2. cd build
    3. cmake ..
    4. make
    5. sudo make install (optionally)

  * win32 based systems:
    1. md build
    2. cd build
    3. cmake ..
    4. open project files and compile them

Closing Remarks
=====================

If you need help, want to give some suggestions or
just want to talk, feel free to join our IRC channel #desura on irc.freenode.net
